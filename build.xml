<project name="ISpend" 
	xmlns:fx="javafx:com.sun.javafx.tools.ant" 
	xmlns:ivy="antlib:org.apache.ivy.ant"
	default="build">
	
	<!-- Build folders -->
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="build.prod.dir" value="${build.dir}/prod" />
	<property name="build.test.dir" value="${build.dir}/test" />
	<property name="unit.test.dir" value="tests-unit" />
	<property name="instrumented.dir" value="build/instrumented-classes" />
	
	<!-- JFX Properties -->
	<!-- Assumes we are using jdk1.7.0_06, which includes javafx runtime and ant task -->
	<property name="javafx.main.class" value="org.paulg.ispend.main.ISpend" />
	<property name="application.title" value="ISpend" />
	<property name="javafx.ant.path" value="${java.home}/../lib/ant-javafx.jar" />
	<property name="javafx.jar.path" value="${java.home}/lib/jfxrt.jar" />

	<!-- IVY properties -->
	<property name="ivy.install.version" value="2.1.0" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<property name="reports.dir" value="${build.dir}/reports" />
	<property name="unit.test.report.dir" value="${reports.dir}/unit-tests" />
	<property name="pmd.report.dir" value="${reports.dir}/pmd" />
	<property name="coverage.report.dir" value="${reports.dir}/test-coverage" />

	<property name="config.dir" value="config" />
	<property name="config.pmd.dir" value="${config.dir}/pmd" />

	<property name="build.agent" value="git" />

	<path id="classpath">
		<fileset file="${javafx.jar.path}" />
		<pathelement location="${build.prod.dir}" />
		<pathelement location="${build.test.dir}" />
		<fileset dir="${lib.dir}" includes="*.jar"/>
	</path>

	<!-- COMPILE target -->
	<target name="compile" depends="resolve" description="Compile application source code.">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.prod.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.prod.dir}" classpathref="classpath" debug="true" debuglevel="vars,lines,source"/>
	</target>

	<!-- JavaFX DEPLOY target -->
	<target name="deploy" depends="compile" description="Deploy the application in all bundle formats.">
		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${javafx.ant.path}" />

		<mkdir dir="${dist.dir}" />
		<fx:jar destfile="dist/ISpend.jar">
			<fx:application mainClass="${javafx.main.class}" />
			<fileset dir="${build.dir}/">
				<include name="**" />
			</fileset>
		</fx:jar>

		<fx:deploy nativeBundles="all" outdir="${dist.dir}" outfile="${application.title}">
			<fx:application name="${application.title}" mainClass="${javafx.main.class}" />
			<fx:resources>
				<fx:fileset dir="${dist.dir}" includes="*.jar" />
			</fx:resources>
			<fx:info title="${application.title}" />
		</fx:deploy>
	</target>

	<!-- CLEAN target -->
	<target name="clean" description="Remove build and dist directories.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${coverage.report.dir}" />
		<delete file="cobertura.ser" />
	</target>

	<!-- BUILD target -->
	<target name="build" depends="clean, deploy"/>

	
	<!-- IVY targets -->
	<target name="download-ivy" unless="offline">
		<mkdir dir="${ivy.jar.dir}"/>
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
		             dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="init-ivy" depends="download-ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
		                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<target name="resolve" depends="init-ivy" description="Retrieve dependencies with ivy.">
		<ivy:retrieve pattern="lib/[artifact].[ext]" type="jar,bundle"/>
	</target>
		
	<!-- COMPILE all tests -->
	<target name="compile-tests" depends="compile">
		<mkdir dir="${build.test.dir}"/>
		<javac srcdir="${unit.test.dir}" destdir="${build.test.dir}" classpathref="classpath" />
	</target>

	<!-- ALL task -->
	<target name="all" depends="coverage, pmd" />
	
	<!-- PMD task -->
	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="classpath" />
		<mkdir dir="${pmd.report.dir}" />
		<pmd shortFilenames="true">
			<!-- <ruleset>rulesets/favorites.xml</ruleset> -->
			<ruleset>basic,design,braces,junit</ruleset>
			<!-- <formatter type="html" toFile="pmd_report.html" linkPrefix="http://pmd.sourceforge.net/xref/"/>-->
			<formatter type="xml" toFile="${pmd.report.dir}/pmd.xml" />
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${unit.test.dir}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
		<xslt in="${pmd.report.dir}/pmd.xml" style="pmd-format.xslt" out="${pmd.report.dir}/pmd.html" />
	</target>

	<!-- Coverage tasks -->
	<taskdef classpathref="classpath" resource="tasks.properties" />

	<target name="instrument" depends="compile">
		<cobertura-instrument todir="${instrumented.dir}">
			<fileset dir="bin">
				<include name="**/*.class" />
				<exclude name="**/*Test.class"/>
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="coverage" depends="clean, instrument, unit-tests">
		<cobertura-report destdir="${coverage.report.dir}">
			<fileset dir="${src.dir}">
			</fileset>
			<include name="**/*.java" />
		</cobertura-report>
	</target>

	<target name="coverage-unit-tests" depends="clean, instrument, unit-tests">
		<cobertura-report destdir="${coverage.report.dir}">
			<fileset dir="${src.dir}">
			</fileset>
			<include name="**/*.java" />
		</cobertura-report>
	</target>

	<!-- RUN unit tests -->
	<target name="unit-tests" depends="compile,compile-tests">
		<mkdir dir="${unit.test.report.dir}" />
		<junit printsummary="yes" errorProperty="test.failed" failureProperty="test.failed">
			<classpath location="${instrumented.dir}" />
			<classpath refid="classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${unit.test.report.dir}">
				<fileset dir="${unit.test.dir}" includes="**/*Test.java" />
			</batchtest>
		</junit>
		<junitreport todir="${unit.test.report.dir}">
			<fileset dir="${unit.test.report.dir}" includes="TEST-*.xml" />
			<report todir="${unit.test.report.dir}" />
		</junitreport>
	</target>
	
	<target name="test" depends="coverage-unit-tests"/>

</project>
